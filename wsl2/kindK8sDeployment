#Setting Up Kubernetes with kind
=====================
#Open Your WSL2 Terminal:
#Launch your WSL2 terminal (e.g., Ubuntu).
#Install kind:
#If you haven't installed kind yet, you can do so with the following commands:

curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
chmod +x ./kind
sudo mv ./kind /usr/local/bin/kind

#Create a Kubernetes Cluster:
#Use kind to create a Kubernetes cluster:

kind create cluster

#Download kubectl:

curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl
kubectl version --client


#Verify the Cluster:
#Check if the cluster is running properly:

kubectl cluster-info --context kind-kind

#Access the Kubernetes Dashboard (Optional):
#If you want to access the Kubernetes dashboard, you can install it using the following command:

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.1/aio/deploy/recommended.yaml

#After deploying the dashboard, you can access it by running:

kubectl proxy

#Then, open your browser and go to http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/.
#Interacting with Your Cluster:
#You can now use kubectl to interact with your Kubernetes cluster. For example, to see the nodes in your cluster, run:

kubectl get nodes

#Additional Notes
====================
#Ensure that Docker is running before you create the cluster with kind.
#You can customize your cluster configuration by creating a kind configuration file if needed.
#To delete the cluster when you're done, use:

kind delete cluster

#This setup should get you up and running with Kubernetes on WSL2 using Docker! If you have any questions or run into issues, feel free to ask.
